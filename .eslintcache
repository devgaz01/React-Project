[{"D:\\dimtech\\New folder\\dimtech\\src\\App.js":"1","D:\\dimtech\\New folder\\dimtech\\src\\config\\routes\\AppRoutes\\AppRoutes.js":"2","D:\\dimtech\\New folder\\dimtech\\src\\screens\\public\\auth\\login\\login.js":"3","D:\\dimtech\\New folder\\dimtech\\src\\serviceWorker.js":"4"},{"size":1072,"mtime":1609168604959,"results":"5","hashOfConfig":"6"},{"size":632,"mtime":1609169988544,"results":"7","hashOfConfig":"6"},{"size":9254,"mtime":1609170164389,"results":"8","hashOfConfig":"6"},{"size":5227,"mtime":1609157680185,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12","usedDeprecatedRules":"13"},"1lpb8tx",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\dimtech\\New folder\\dimtech\\src\\App.js",["21","22"],"import React from 'react';\r\n// Importing these for redux integration. \r\nimport { store, persistor } from './config/store/index';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\n// Importing wrapped navigations with theme provider\r\nimport WithThemeAndRoutes from '../src/withThemeAndRoutes'\r\n// importing main global app.css file\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    // Wraping Naviations with Theme provider with redux provider for usning global state \r\n    <Provider store={store}>\r\n      {/* App with MUI Theme Provider and Navigations */}\r\n      <WithThemeAndRoutes />\r\n    </Provider>\r\n\r\n    // If you want to use Redux, Redux Thunk with Redux Persist, Please comment the upper code and uncomment the below code.\r\n\r\n\r\n    // <Provider store={store}>\r\n    //   <PersistGate loading={null} persistor={persistor}>\r\n    //     {/* App with MUI Theme Provider and Navigations */}\r\n    //     <WithThemeAndRoutes />\r\n    //   </PersistGate>\r\n    // </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["23","24"],"D:\\dimtech\\New folder\\dimtech\\src\\config\\routes\\AppRoutes\\AppRoutes.js",[],"D:\\dimtech\\New folder\\dimtech\\src\\screens\\public\\auth\\login\\login.js",["25","26","27","28","29","30"],"import React, { useState } from 'react';\r\n// Imprting Material ui components to use in our app\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport { useHistory } from 'react-router-dom'\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n// Importing axios client for http requests\r\nimport axios from 'axios'\r\n\r\n// these are material ui styles for styling component in js file\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(https://source.unsplash.com/random)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // alignItems: 'center',\r\n        width: \"50%\"\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'flex-start'\r\n    },\r\n    learnMore: {\r\n        margin: \"15px 0px 16px\",\r\n        color: \"#fff\",\r\n        borderRadius: 20,\r\n        fontFamily: \"NunitoSemiBold\",\r\n        fontSize: 12\r\n    },\r\n    submit: {\r\n        margin: \"15px 0px 16px\",\r\n        color: \"#fff\",\r\n        borderRadius: 20,\r\n        fontFamily: \"NunitoSemiBold\",\r\n        fontSize: 12,\r\n        padding: \"4px 20px\",\r\n    },\r\n    leftbox: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        padding: \"40px 0px 0px 70px\",\r\n        flexDirection: 'column',\r\n\r\n    },\r\n    rightbox: {\r\n        background: 'linear-gradient(#0034ba 0%, #1734bd 25.65%, #382eb8 49.74%, #3f12a4 87%, #460093 100%)',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        paddingLeft: 30\r\n    },\r\n    logo: {\r\n        // marginBottom: 'auto',\r\n        position: 'absolute',\r\n        top: 40\r\n    },\r\n    descriptionbox: {\r\n        marginBottom: 'auto',\r\n        marginTop: \"auto\"\r\n    },\r\n    greetings: {\r\n        fontFamily: \"NunitoRegular\", fontSize: \"25px\",\r\n        lineHeight: 1.3\r\n    },\r\n    description: {\r\n        fontFamily: \"NunitoRegular\", fontSize: \"14px\",\r\n        width: \"60%\",\r\n        lineHeight: 1.6,\r\n        margin: \"16px 0px 0px\"\r\n    },\r\n    formHeading: {\r\n        fontFamily: \"NunitoRegular\",\r\n        fontSize: 24\r\n    },\r\n    ask: {\r\n        fontFamily: \"NunitoLight\",\r\n        fontSize: 12\r\n    },\r\n    keep: {\r\n        fontFamily: 'NunitoLight',\r\n        fontSize: \"14px\",\r\n        color: \"#fff\",\r\n    },\r\n    fp: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\",\r\n        width: \"100%\"\r\n    },\r\n    backdrop: {\r\n        zIndex: theme.zIndex.drawer + 1,\r\n        color: '#fff',\r\n    },\r\n}));\r\n\r\n\r\n// this is login screen component\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    // this is true/false checked state for keep me logged in\r\n    const [checked, setChecked] = useState(true)\r\n\r\n\r\n    // this is custom color check box of material ui\r\n    const WhiteCheckbox = withStyles({\r\n        root: {\r\n            color: \"#fff\",\r\n            '&$checked': {\r\n                color: \"#fff\",\r\n            },\r\n        },\r\n        checked: {},\r\n    })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    // this is submit login fuction\r\n    function handleSubmit() {\r\n        setLoading(true)\r\n        const body = {\r\n            email,\r\n            password\r\n        }\r\n        axios.post('https://reqres.in/api/login', body).then((res) => {\r\n            if (res.data && res.data.token) {\r\n                setEmail(\"\")\r\n                setPassword(\"\")\r\n                // alert(\"Logged In Successfully!\")\r\n                history.push('/dashboard')\r\n            }\r\n        }).catch((err) => {\r\n            setLoading(false)\r\n            if (err.response.data) {\r\n                alert(err.response.data.error)\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        // Wraping my login screen with main grid container of material ui\r\n        <Grid container component=\"main\" className={classes.root}>\r\n            <CssBaseline />\r\n            {/* this is left content grid box */}\r\n            <Grid item xs={false} sm={6} md={7} className={classes.leftbox}>\r\n                <div className={classes.logo}>\r\n                    <img src={require('../../../../assets/images/logo.png')} />\r\n                </div>\r\n                <div className={classes.descriptionbox}>\r\n                    <Typography variant=\"h6\" className={classes.greetings}>\r\n                        <div>Hi,</div>\r\n                        Welcome on Dimtech.\r\n            </Typography>\r\n                    <Typography variant=\"body2\" className={classes.description}>\r\n                        Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor\r\n                        incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud\r\n                        exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure\r\n                        dolor in reprehenderit.\r\n            </Typography>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        className={classes.learnMore}\r\n                        disableElevation\r\n                        color={'secondary'}\r\n                    >\r\n                        Learn more\r\n            </Button>\r\n                </div>\r\n            </Grid>\r\n            {/* this is right content grid box for login form */}\r\n\r\n            <Grid item xs={12} sm={6} md={5} component={Paper} elevation={6} className={classes.rightbox} square>\r\n                <div className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h5\" color={'primary'} className={classes.formHeading}>\r\n                        Sign-in\r\n          </Typography>\r\n                    <form className={classes.form} noValidate action={'JavaScript:void(0)'}>\r\n\r\n                        <input className={'auth-input'} value={email} placeholder={'Email'} type={'email'} onChange={(e) => { setEmail(e.target.value) }} />\r\n                        <input className={'auth-input'} value={password} placeholder={'Password'} type=\"password\" onChange={(e) => { setPassword(e.target.value) }} />\r\n\r\n                        <div className={classes.fp}>\r\n                            <FormControlLabel\r\n                                control={<WhiteCheckbox checked={checked} onChange={() => { setChecked(!checked) }} name=\"checkedG\" />}\r\n                                label=\"Keep Me Logged In\"\r\n                            />\r\n\r\n                            <Link href=\"#\" variant=\"body1\" style={{ textDecoration: \"underline\", textUnderlinePosition: \"under\" }}>\r\n                                Forgot password?\r\n                </Link>\r\n                        </div>\r\n                        <Button\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.submit}\r\n                            disableElevation\r\n                            onClick={() => { handleSubmit() }}\r\n                            disabled={email === \"\" || password === \"\"}\r\n                        >\r\n                            Login\r\n            </Button>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\" className={classes.ask}>\r\n                                    {\"Need an account ? \"} <span style={{ color: \"#fc6c5f\" }}> Sign Up</span>\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n            <Backdrop className={classes.backdrop} open={loading} onClick={() => { setLoading(false) }}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </Grid>\r\n    );\r\n}","D:\\dimtech\\New folder\\dimtech\\src\\serviceWorker.js",[],{"ruleId":"31","severity":1,"message":"32","line":3,"column":17,"nodeType":"33","messageId":"34","endLine":3,"endColumn":26},{"ruleId":"31","severity":1,"message":"35","line":5,"column":10,"nodeType":"33","messageId":"34","endLine":5,"endColumn":21},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"31","severity":1,"message":"40","line":3,"column":8,"nodeType":"33","messageId":"34","endLine":3,"endColumn":14},{"ruleId":"31","severity":1,"message":"41","line":6,"column":8,"nodeType":"33","messageId":"34","endLine":6,"endColumn":17},{"ruleId":"31","severity":1,"message":"42","line":11,"column":8,"nodeType":"33","messageId":"34","endLine":11,"endColumn":11},{"ruleId":"31","severity":1,"message":"43","line":13,"column":8,"nodeType":"33","messageId":"34","endLine":13,"endColumn":24},{"ruleId":"44","severity":1,"message":"45","line":180,"column":21,"nodeType":"46","endLine":180,"endColumn":80},{"ruleId":"47","severity":1,"message":"48","line":211,"column":71,"nodeType":"49","messageId":"50","endLine":211,"endColumn":91},"no-unused-vars","'persistor' is defined but never used.","Identifier","unusedVar","'PersistGate' is defined but never used.","no-native-reassign",["51"],"no-negated-in-lhs",["52"],"'Avatar' is defined but never used.","'TextField' is defined but never used.","'Box' is defined but never used.","'LockOutlinedIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]